<lexicon lang="en-us" params="getExtraParams()">

  <entry>
    <base>GIT_NAVIGATION_DESCRIPTION</base>
    <trans>Git repositories</trans>
  </entry>

  <entry>
    <base>GIT_FORM_TITLE</base>
    <trans>Create, modify, or remove Git repositories</trans>
  </entry>

  <entry>
    <base>GIT_HOME_TITLE</base>
    <trans>Create, modify, or remove Git repositories.</trans>
  </entry>

  <entry>
    <base>GIT_HOME_DESCRIPTION</base>
    <trans>
      <![CDATA[ 
        <p>This panel allows managing centralised Git repositories on this server.</p>
        <p>Configured Git repositories are available via HTTPS like in https://{$serverName}/git/repository.git.</p>
        <p>When Gitweb is also installed, the Git repositories can also be viewed through a web interface https://{$serverName}/git</p>
        <p>For more details and documentation on using Git, click on the Git logo on the right.</p>
      ]]>
    </trans>
  </entry>

  <entry>
    <base>GIT_REPOSITORY_ADD_BUTTON</base>
    <trans>Add a Git Repository</trans>
  </entry>

  <entry>
    <base>GIT_CONFIGURE_BUTTON</base>
    <trans>Configure Git</trans>
  </entry>
  
  <entry>
    <base>GIT_REPOSITORY_LIST_DESCRIPTION</base>
    <trans>
      <![CDATA[ 
        <p>The table below lists the currently configured Git repositories on this server.</p>
        <p>The <b>bold</b> entries in the <b>Pull Access</b> and <b>Push Access</b> columns correspond to the 
        user groups on this server. Non-bold entries are individual users. <i>Anonymous</i> means there is no access control in effect.</p>
        <p>You can modify the settings of a Git repository or remove a Git repository by clicking on the corresponding command in the <b>Action</b> column.</p>
      ]]>
    </trans>
  </entry>
 
  <entry>
    <base>GIT_ADD_TITLE</base>
    <trans>Create or modify a Git repository</trans>
  </entry>
  
  <entry>
    <base>GIT_NAME_FIELD_CREATE_DESC</base>
    <trans>Provide a name for the Git repository to be created. The repository
           will be created as a bare repository and will automatically have the
           extension .git added to the name.
           Note the name should contain only upper or lower-case letters, numbers, 
           periods, hyphens and underscores, and should start with a letter. 
           For example "johnson", "Intra", and "cust3.prj12" are all valid names,
           but "3associates", and "Bus!Partner" are not. 
           The name is limited to {$maxLength} characters.</trans>
  </entry>

  <entry>
    <base>GIT_NAME_FIELD_MODIFY_DESC</base>
    <trans>The field below indicates the name of the git respository.
           The name can not be modified.</trans>
  </entry>
  
  <entry>
    <base>GIT_DESCRIPTION_FIELD_DESC</base>
    <trans>The description below correspond to the "description" file in the 
           Git repository and is used by GitWeb to display the repository description
           on the GitWeb page.
    </trans>
  </entry>

  <entry>
    <base>GIT_ACCESS_FIELD_DESC</base>
    <trans>Select the required network access for the repository. Select "Local Network Only" if you want to 
           prevent any external access to the repository. Select "Internet" if you do want to make the 
           repository accessible remotely. The network access setting is in addition to the user and group
           push/pull permissions configured below.
    </trans>
  </entry>
  
  <entry>
  	<base>GIT_REMOVE_TITLE</base>
	  <trans>Remove Git Repository</trans>
  </entry>
    
  <entry>
    <base>GIT_REMOVE_DESCRIPTION</base>
    <trans>
            <![CDATA[
            <p>
                You are about to remove the Git repository "{$name}"
                ({$description}).
            </p>
            <p>
                <b>All files belonging to this Git repository will be deleted!</b>
            </p>
            <p>
                Are you sure you wish to remove this Git repository?
            </p>
            ]]>
        </trans>
  </entry>

  <entry>
    <base>GIT_REMOVE_BUTTON</base>
    <trans>Remove Git Repository</trans>
  </entry>

  <entry>
    <base>GIT_CONFIGURATION_TITLE</base>
    <trans>Configure Git Settings</trans>
  </entry>

  <entry>
    <base>GIT_PATH</base>
    <trans>Git Path Prefix</trans>
  </entry>
  
  <entry>
    <base>GIT_CONFIGURATION_DESCRIPTION</base>
    <trans>Configure the global configuration settings for Git on this server</trans>
  </entry>
  
  <entry>
    <base>GIT_CONFIGURATION_UPDATE_BUTTON</base>
    <trans>Save Git Configuration</trans>
  </entry>
  
  <entry>
    <base>GIT_LABEL_ALLOW_ACCESS_FROM</base>
    <trans>Allow repository access from</trans>
  </entry>

  <entry>
    <base>GIT_REPOSITORY_NAME</base>
    <trans>Repository Name</trans>
  </entry>

  <entry>
    <base>GIT_ALLOW_FROM</base>
    <trans>Allow from</trans>
  </entry>
  
  <entry>
    <base>GIT_PULL_ACCESS</base>
    <trans>Pull Access</trans>
  </entry>

  <entry>
    <base>GIT_PUSH_ACCESS</base>
    <trans>Push Access</trans>
  </entry>

  <entry>
    <base>GIT_ANONYMOUS</base>
    <trans>Anonymous</trans>
  </entry>
  
  <entry>
    <base>GIT_ACCESS_ALLOWED_FROM_LOCAL</base>
    <trans>Local Network Only</trans>
  </entry>

  <entry>
    <base>GIT_ACCESS_ALLOWED_FROM_INTERNET</base>
    <trans>Internet</trans>
  </entry>

  <entry>
    <base>GIT_ACCESS_ALLOWED_FROM_CONFIG_ERROR</base>
    <trans>Configuration Error!</trans>
  </entry>

  <entry>
    <base>GIT_PRIVILEGES_NOTE</base>
    <trans>
      <![CDATA[ <p> Use the selection boxes below to you configure the pull and push permissions for the Git repository.<br />
      Select either groups or individual users. Press the SHIFT and/or the CTRL key to select multiple groups or users.<br />
      If you set <b>neither</b> a group or user setting, the repository will be accessible <b>anonymously</b>! (i.e. no user name or password will be required).<br />
      If you specify users or groups for pull permissions, the push users will also have pull access.<br />
      If you want your user(s) or group(s) to have exclusive full pull and push access, specify them in <b>both</b> the pull and push box.<br />
      The group <b>admin</b> includes all administrators and the group <b>shared</b> includes all local users on this system.</p> ]]>
    </trans>
  </entry>
  
  <entry>
    <base>GIT_PRIVILEGES_GROUPS_PULL</base>
    <trans>Groups allowed to pull</trans>
  </entry>

  <entry>
    <base>GIT_PRIVILEGES_GROUPS_PUSH</base>
    <trans>Groups allowed to push</trans>
  </entry>

  <entry>
    <base>GIT_PRIVILEGES_USERS_PULL</base>
    <trans>Users allowed to pull</trans>
  </entry>
  
  <entry>
    <base>GIT_PRIVILEGES_USERS_PUSH</base>
    <trans>Users allowed to push</trans>
  </entry>

  <entry>
	  <base>GIT_USER_ADMINISTRATOR</base>
    <trans>Administrator</trans>
  </entry>
  
  <entry>
	  <base>GIT_GROUP_ADMINISTRATORS</base>
    <trans>Administrators</trans>
  </entry>

  <entry>
	  <base>GIT_GROUP_EVERYBODY</base>
    <trans>Everybody</trans>
  </entry>
  
  <entry>
    <base>GIT_NOTIFY_NO_REPOSITORIES</base>
    <trans>There are currently no Git repositories configured.</trans>
  </entry>

  <entry>
    <base>GIT_SUCCESS_CONFIG_CHANGE</base>
    <trans>Git was succesfully reconfigured.</trans>
  </entry>
  
  <entry>
    <base>GIT_SUCCESS_CREATED_REPOSITORY</base>
    <trans>Successfully created Git repository.</trans>
  </entry>

  <entry>
    <base>GIT_SUCCESS_MODIFIED_REPOSITORY</base>
    <trans>Successfully modified Git repository.</trans>
  </entry>

  <entry>
    <base>GIT_SUCCESS_DELETED_REPOSITORY</base>
    <trans>Successfully deleted the Git repository.</trans>
  </entry>
  
  <entry>
    <base>GIT_ERROR_CONFIG_CHANGE</base>
    <trans>An error occurred while configuring Git.</trans>
  </entry>

  <entry>
    <base>GIT_ERROR_CREATING_REPOSITORY</base>
    <trans>There was an internal error while creating the Git repository.</trans>
  </entry>

  <entry>
    <base>GIT_ERROR_CANT_FIND_REPOSITORY</base>
    <trans>Can't find repository "{$name}" (does it exist?)</trans>
  </entry>
  
  <entry>
    <base>GIT_ERROR_CANT_CREATE_REPOSITORY</base>
    <trans>Can't create repository "{$name}" (does it already exist?)</trans>
  </entry>
  
  <entry>
    <base>GIT_ERROR_MODIFYING_REPOSITORY</base>
    <trans>An error occurred while modifying the Git repository.</trans>
  </entry>
  
  <entry>
    <base>GIT_ERROR_DELETING_REPOSITORY</base>
    <trans>An error occurred while deleting the Git repository. 
           The repository directory may not have been deleted completely.</trans>
  </entry>
  
  <entry>
    <base>GIT_ERROR_NAME_HAS_INVALID_CHARS</base>
    <trans>The Git repository name "{$repositoryName}" contains invalid characters.
           Repository names must start with a lower case letter and contain
            only lower case letters, numbers, underscore and hyphens.
    </trans>
  </entry>

  <entry>
    <base>GIT_ERROR_DESCRIPTION_HAS_INVALID_CHARS</base>
    <trans>The Git repository description "{$repositoryDescription}" contains invalid characters.
            Repository descriptions should only contain
            lower and upper case letters, numbers, and hyphens and underscores.
    </trans>
  </entry>

  <entry>
    <base>GIT_ERRROR_NAME_TOO_LONG</base>
    <trans>
            The Git repository name "{$repositoryName}" is too long. The maximum is
            {$maxRepositoryNameLength} characters.
    </trans>
  </entry>

  <entry>
    <base>GIT_ERROR_RADIO_VALUE_NOT_CHECKED</base>
    <trans>Make a selection</trans>
  </entry>

  <entry>
    <base>GIT_ERROR_ALREADY_EXISTS</base>
    <trans>The repository "{$repositoryName}" is an existing Git repository. There is no new repository created. Use the 'Modify' link in the table below to reconfigure the existing repository.</trans>
  </entry>

</lexicon>
